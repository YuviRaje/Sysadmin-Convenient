#!/bin/bash
##############################################################################
#	IP_range.sh
##############################################################################


FileName="IP_range.sh"
NumInput=$#
echo "number of inputs: $NumInput"
#if [ $# -ne 1 || $# -ne 3 ] ; then
if [ $# -ne 1 ] ; then
	if [ $# -ne 3 ] ; then
		echo " "; echo " "; echo "Program requires either ZERO or ONE input only"
		echo "e.g."; echo "   IP_range.sh 10.7.92             (note - no last period)"
		echo "		This will run all the IPv4 combinations sequentially from 1 to 254"
		echo "   IP_range.sh 10.7.92 101 123"
		echo "		This will run the IPv4 combinations sequentially from 1 to 22"
		exit 0
	fi
fi
##############################################################################
string_name="====================================================================================="
echo "        "; echo $string_name
sp=" "; dot="."
#clear
RunDate=`date '+%m%d%y-%H%M'`
echo "Running 'IP_range.sh'"
OStype0=`uname`
NodeName=`uname -n`
if [ $# -eq 1 ]; then
	IP1=$1; minLastOct=11 ; maxLastOct=254;  echo "One input - default 11-254 for 4th octet."
	echo "IPv4_Range input: $IP1, Default: minLastOct: $minLastOct, maxLastOct=$maxLastOct"
   else
	IP1=$1; minLastOct=$2; maxLastOct=$3; echo "Three inputs."
   	echo "IPv4_Range input: $IP1, Selected: minLastOct: $minLastOct, maxLastOct=$maxLastOct"
fi
if [ $minLastOct -gt $maxLastOct ]; then
	tempM=$maxLastOct;  maxLastOct=$minLastOct;  minLastOct=$tempM
	echo "reordered - small to large"
fi	
echo "IPv4_Range: $IP1, minLastOct: $minLastOct, maxLastOct=$maxLastOct"
uscr="_"
LOG="/PingResults$uscr$IP1$uscr$RunDate"
echo "LOG: $LOG"
echo "Results to $LOG"; echo $string_name 
echo $string_name > $LOG
echo "Start Run Date and Time: `date`.  Generated by: $FileName " >> $LOG
echo $string_name >> $LOG
count=$minLastOct; #echo $count $minLastOct
#echo "OUTSIDE WHILE LOOP ......................................................."
while [ $count -le $maxLastOct ]
   do
	wholeIP=$IP1$dot$count
	echo "Pinging -c 2 $wholeIP..."
	ping -c 2 $wholeIP > /dev/null
	result=$? ; # echo $result
#		zero return code is GOOD
	if [ $result -lt 1 ]; then
		echo "                             $wholeIP - pinged OK"
		echo "$wholeIP - worked" >> $LOG
	   else
		echo "                             $wholeIP - missing, turned off, etc..."
		echo "$wholeIP - missing, off, etc..." >> $LOG
	fi
    (( count++ ))
   done
#
echo $string_name >> $LOG; echo "End Run Date and Time: `date`" >> $LOG
echo $string_name >> $LOG
echo "Look in the LOG - located at: $LOG"
echo "cat $LOG"
#
################################################################################################################## END ########
